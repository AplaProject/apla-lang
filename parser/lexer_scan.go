// Code generated by golex. DO NOT EDIT.

package parser

import (
	"strconv"

	"modernc.org/golex/lex"
)

func (l *lexer) scan(lval *yySymType) lex.Char {
	c := l.Enter()

yystate0:
	yyrule := -1
	_ = yyrule
	c = l.Rule0()

	goto yystart1

	goto yystate0 // silence unused label error
	goto yyAction // silence unused label error
yyAction:
	switch yyrule {
	case 1:
		goto yyrule1
	case 2:
		goto yyrule2
	case 3:
		goto yyrule3
	case 4:
		goto yyrule4
	case 5:
		goto yyrule5
	case 6:
		goto yyrule6
	case 7:
		goto yyrule7
	case 8:
		goto yyrule8
	case 9:
		goto yyrule9
	case 10:
		goto yyrule10
	case 11:
		goto yyrule11
	case 12:
		goto yyrule12
	case 13:
		goto yyrule13
	case 14:
		goto yyrule14
	case 15:
		goto yyrule15
	}
	goto yystate1 // silence unused label error
yystate1:
	c = l.Next()
yystart1:
	switch {
	default:
		goto yyabort
	case c == '(':
		goto yystate3
	case c == ')':
		goto yystate4
	case c == ',':
		goto yystate5
	case c == ':':
		goto yystate7
	case c == '[':
		goto yystate9
	case c == '\t' || c == '\n' || c == '\r' || c == ' ':
		goto yystate2
	case c == ']':
		goto yystate10
	case c == 'b':
		goto yystate11
	case c == 'c':
		goto yystate15
	case c == 'd':
		goto yystate23
	case c == 'i':
		goto yystate27
	case c == '{':
		goto yystate30
	case c == '}':
		goto yystate31
	case c >= '0' && c <= '9':
		goto yystate6
	case c >= 'A' && c <= 'Z' || c == '_' || c == 'a' || c >= 'e' && c <= 'h' || c >= 'j' && c <= 'z' || c == '\u0080':
		goto yystate8
	}

yystate2:
	c = l.Next()
	yyrule = 1
	l.Mark()
	switch {
	default:
		goto yyrule1
	case c == '\t' || c == '\n' || c == '\r' || c == ' ':
		goto yystate2
	}

yystate3:
	c = l.Next()
	yyrule = 4
	l.Mark()
	goto yyrule4

yystate4:
	c = l.Next()
	yyrule = 5
	l.Mark()
	goto yyrule5

yystate5:
	c = l.Next()
	yyrule = 2
	l.Mark()
	goto yyrule2

yystate6:
	c = l.Next()
	yyrule = 14
	l.Mark()
	switch {
	default:
		goto yyrule14
	case c >= '0' && c <= '9':
		goto yystate6
	}

yystate7:
	c = l.Next()
	yyrule = 3
	l.Mark()
	goto yyrule3

yystate8:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate9:
	c = l.Next()
	yyrule = 8
	l.Mark()
	goto yyrule8

yystate10:
	c = l.Next()
	yyrule = 9
	l.Mark()
	goto yyrule9

yystate11:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'o':
		goto yystate12
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'n' || c >= 'p' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate12:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'o':
		goto yystate13
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'n' || c >= 'p' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate13:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'l':
		goto yystate14
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'k' || c >= 'm' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate14:
	c = l.Next()
	yyrule = 12
	l.Mark()
	switch {
	default:
		goto yyrule12
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate15:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'o':
		goto yystate16
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'n' || c >= 'p' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate16:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'n':
		goto yystate17
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'm' || c >= 'o' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate17:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 't':
		goto yystate18
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 's' || c >= 'u' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate18:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'r':
		goto yystate19
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'q' || c >= 's' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate19:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'a':
		goto yystate20
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'b' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate20:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'c':
		goto yystate21
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c == 'a' || c == 'b' || c >= 'd' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate21:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 't':
		goto yystate22
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 's' || c >= 'u' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate22:
	c = l.Next()
	yyrule = 11
	l.Mark()
	switch {
	default:
		goto yyrule11
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate23:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'a':
		goto yystate24
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'b' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate24:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 't':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 's' || c >= 'u' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate25:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'a':
		goto yystate26
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'b' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate26:
	c = l.Next()
	yyrule = 10
	l.Mark()
	switch {
	default:
		goto yyrule10
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate27:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 'n':
		goto yystate28
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'm' || c >= 'o' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate28:
	c = l.Next()
	yyrule = 15
	l.Mark()
	switch {
	default:
		goto yyrule15
	case c == 't':
		goto yystate29
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 's' || c >= 'u' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate29:
	c = l.Next()
	yyrule = 13
	l.Mark()
	switch {
	default:
		goto yyrule13
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z' || c == '\u0080' || c == '\u0081':
		goto yystate8
	}

yystate30:
	c = l.Next()
	yyrule = 6
	l.Mark()
	goto yyrule6

yystate31:
	c = l.Next()
	yyrule = 7
	l.Mark()
	goto yyrule7

yyrule1: // [ \t\r\n ]+
	{
		// ignore all whitespace
		goto yystate0
	}
yyrule2: // ,
	{
		return l.char(COMMA)
	}
yyrule3: // :
	{
		return l.char(COLON)
	}
yyrule4: // \(
	{
		return l.char(LPAREN)
	}
yyrule5: // \)
	{
		return l.char(RPAREN)
	}
yyrule6: // \{
	{
		return l.char(LBRACE)
	}
yyrule7: // \}
	{
		return l.char(RBRACE)
	}
yyrule8: // \[
	{
		return l.char(LBRAKET)
	}
yyrule9: // \]
	{
		return l.char(RBRAKET)
	}
yyrule10: // data
	{
		return l.char(DATA)
	}
yyrule11: // contract
	{
		return l.char(CONTRACT)
	}
yyrule12: // bool
	{
		return l.char(T_BOOL)
	}
yyrule13: // int
	{
		return l.char(T_INT)
	}
yyrule14: // {int}
	{
		{
			lval.i, _ = strconv.Atoi(string(l.TokenBytes(nil)))
			return l.char(INT)
		}
		goto yystate0
	}
yyrule15: // {identifier}
	{
		{
			lval.s = string(l.TokenBytes(nil))
			return l.char(IDENT)
		}
		goto yystate0
	}
	panic("unreachable")

	goto yyabort // silence unused label error

yyabort: // no lexem recognized
	if c, ok := l.Abort(); ok {
		return l.char(c)
	}

	goto yyAction
}
