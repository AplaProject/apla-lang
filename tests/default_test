contract myDIV {
    return 100/(15-0xf)
} 
==== integer divide by zero
contract myMULF {
    return 2*false
} 
==== myMULF 2:14: Operator int*bool has not been found
contract myMUL {
    return 0xFF - 2*(50-16) + (20+52)/3 + (20-5 + 7)*3/0x2 + 8/3
} 
==== 246
contract myAdd {
    return 0xFF + 1 + -100 - 56 - -1000
} 
==== 1100
contract myPush64 {
    return 0xFFFFFFFFFF
} 
==== 1099511627775
contract myPushn64 {
    return 0x10AbFc32
} 
==== 279706674
contract myPushn3212 {
    return -2147483648
} 
==== -2147483648
contract myPushn321 {
    return -1
} 
==== -1
contract myPushn32 {
    return 2147483647
} 
==== 2147483647
contract myPush32 {
    return (1000123)
} 
==== 1000123
contract myNOTTR {
    return !true
} 
==== false
contract myTR {
    return true
} 
==== true
contract myE {
    return -true
} 
==== myE 2:13: Operator -bool has not been found
contract myS {
    return -100
} 
==== -100
contract my777 {
    return 777
} 
==== 777
contract Empty {
    return
} 
==== 
contract my {
    return
} 
==== Contract my has already been defined
contract my {
    10
} 
==== 2:5: syntax error: unexpected INT, expecting RBRACE
contract my {
} 
==== 
contract my {
} 
contract myNext {
} 
==== 3:1: syntax error: unexpected CONTRACT, expecting NEWLINE
myvar contract {
} 
==== 1:1: syntax error: unexpected IDENT, expecting CONTRACT
contract {
} 
==== 1:10: syntax error: unexpected LBRACE, expecting IDENT
/* 
   ==== expecting result or error text
   ==== gas $ expecting result or error text
*/
==== 4:3: syntax error: unexpected $end, expecting CONTRACT